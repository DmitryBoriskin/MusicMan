tinymce.PluginManager.add("disly_media", function (e) {
    function o() {
        ////var n = s.toJSON();
        //var s = editor.windowManager.open({
        //    title: "Insert/edit video",
        //    bodyType: "tabpanel",
        //    body: [{
        //        title: "Video list",
        //        type: "form",
        //        padding: 10,
        //        spacing: 10,
        //        items: [{
        //            type: "textbox",
        //            flex: 1,
        //            name: "list",
        //            value: a(),
        //            label: "Source"
        //        }]
        //    }, {
        //        title: "Embed",
        //        type: "panel",
        //        layout: "flex",
        //        direction: "column",
        //        align: "stretch",
        //        padding: 10,
        //        spacing: 10,
        //        //onShowTab: function () {
        //        //    this.find("#embed").value(r(this.parent().toJSON()))
        //        //},
        //        items: [{
        //            type: "label",
        //            text: "Paste your embed code below:"
        //        }, {
        //            type: "textbox",
        //            flex: 1,
        //            name: "code",
        //            value: a(),
        //            multiline: !0,
        //            minWidth: editor.getParam("code_dialog_width", 600),
        //            minHeight: editor.getParam("code_dialog_height", Math.min(tinymce.DOM.getViewPort().h - 200, 500)),
        //            label: "Source",
        //            //onsubmit: function (e) {
        //            //    editor.insertContent('Title: ' + editor.data.code);
        //            //    //this.find("#code").value(r(this.parent().toJSON()));
        //            //}
        //        }]
        //    }],
        //    onSubmit: function (o) {
        //        editor.focus(),
        //        editor.setContent(o.data.code)
        //        //editor.undoManager.transact( function () { editor.setContent(o.data.code) }),
        //        //editor.selection.setCursorLocation(),
        //        //editor.nodeChanged()
        //    }
        //})
    }

    function getlist()
    {
        e.windowManager.open({
            title: "Insert/edit video",
            url: 'http://info.cap.ru/admin/services/photogallery/',
            width: 800,
            height: 600,
            buttons: [
                {
                    text: 'Ok',
                    onclick: function (o) {
                        e.focus(),
                        e.setContent("yes")
                        e.undoManager.transact(function () { e.setContent("yes") }),
                        e.selection.setCursorLocation(),
                        e.nodeChanged()
                    }

                }, {
                    text: 'Close',
                    onclick: 'close'
                }]
        });
    }



    e.on("preInit", function () {
        var t = e.schema.getSpecialElements();
        tinymce.each("iframe", function (e) {
            t[e] = new RegExp("</" + e + "[^>]*>", "gi")
        })
        //e.schema.addValidElements("object[id|style|width|height|classid|codebase|*],embed[id|style|width|height|type|src|*],video[*],audio[*]");
        var i = e.schema.getBoolAttrs();
        //tinymce.each("webkitallowfullscreen mozallowfullscreen allowfullscreen".split(" "), function (e) {
        //    i[e] = {}
        //}),
        e.parser.addNodeFilter("iframe", function (t, i) {
            for (var o, a, r, c, n, s, m, d = t.length; d--;) {
                for (a = t[d],
                r = new tinymce.html.Node("img", 1),
                r.shortEnded = !0,
                s = a.attributes,
                o = s.length; o--;)
                    c = s[o].name,
                    n = s[o].value,
                    "width" !== c && "height" !== c && "style" !== c && (("data" == c || "src" == c) && (n = e.convertURL(n, c)),
                    r.attr("data-mce-p-" + c, n));
                m = a.firstChild && a.firstChild.value,
                m && (r.attr("data-mce-html", escape(m)),
                r.firstChild = null),
                r.attr({
                    width: a.attr("width") || "300",
                    height: a.attr("height") || ("audio" == i ? "30" : "150"),
                    style: a.attr("style"),
                    src: tinymce.Env.transparentSrc,
                    "data-mce-object": i,
                    "class": "mce-object mce-object-" + i
                }),
                a.replace(r)
            }
        }),
        e.serializer.addAttributeFilter("data-mce-object", function (e, t) {
            for (var i, o, a, r, c, n, s = e.length; s--;) {
                for (i = e[s],
                o = new tinymce.html.Node(i.attr(t), 1),
                "audio" != i.attr(t) && o.attr({
                    width: i.attr("width"),
                    height: i.attr("height")
                }),
                o.attr({
                    style: i.attr("style")
                }),
                r = i.attributes,
                a = r.length; a--;) {
                    var m = r[a].name;
                    0 === m.indexOf("data-mce-p-") && o.attr(m.substr(11), r[a].value)
                }
                c = i.attr("data-mce-html"),
                c && (n = new tinymce.html.Node("#text", 3),
                n.raw = !0,
                n.value = unescape(c),
                o.append(n)),
                i.replace(o)
            }
        })
    }),
    e.on("ObjectSelected", function (e) {
        "audio" == e.target.getAttribute("data-mce-object") && e.preventDefault()
    }),
    e.on("objectResized", function (e) {
        var t, i = e.target;
        i.getAttribute("data-mce-object") && (t = i.getAttribute("data-mce-html"),
        t && (t = unescape(t),
        i.setAttribute("data-mce-html", escape(s(t, {
            width: e.width,
            height: e.height
        })))))
    }),



    e.addButton("disly_media", {
        stateSelector: "iframe",
        icon: "media",
        tooltip: "Insert/edit video",
        context: 'tools',
        onclick: getlist()
    }),
    e.addMenuItem("disly_media", {
        stateSelector: "iframe",
        icon: "media",
        tooltip: "Insert/edit video",
        context: 'tools',
        onclick: getlist()
    })
});